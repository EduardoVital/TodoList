{"remainingRequest":"C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\src\\components\\TaskList\\TaskList.vue?vue&type=template&id=6e11f12f&scoped=true","dependencies":[{"path":"C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\src\\components\\TaskList\\TaskList.vue","mtime":1631305476671},{"path":"C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625589791797},{"path":"C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\node_modules\\babel-loader\\lib\\index.js","mtime":1625254406044},{"path":"C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1630955776177},{"path":"C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625589791797},{"path":"C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1630955776177}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHNlY3Rpb24+CiAgICA8ZGl2IHYtZm9yPSJ0YXNrIGluIGdldFRvZG9MaXN0IiA6a2V5PSJ0YXNrLmlkIiBjbGFzcz0iY29udGFpbmVyLXRhc2siPgogICAgICA8YnV0dG9uIGNsYXNzPSJjaGVja21hcmsiIEBjbGljaz0iaGFuZGxlU2V0VGFza0lzQ29tcGxldGVkKHRhc2suaWQpIj48L2J1dHRvbj4KICAgICAgPHNwYW4+e3sgdGFzay50aXRsZSB9fTwvc3Bhbj4KICAgICAgPGJ1dHRvbiBjbGFzcz0icmVtb3ZlIiBAY2xpY2s9ImhhbmRsZVJlbW92ZVRhc2sodGFzay5pZCkiPlJlbW92ZXI8L2J1dHRvbj4KICAgIDwvZGl2PgogICAgPEZvb3RlclRhc2tMaXN0IC8+CiAgPC9zZWN0aW9uPgo="},{"version":3,"sources":["C:\\Users\\eduardo.souza\\Desktop\\TodoList\\todo-list\\src\\components\\TaskList\\TaskList.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/eduardo.souza/Desktop/TodoList/todo-list/src/components/TaskList/TaskList.vue","sourceRoot":"","sourcesContent":["<template>\n  <section>\n    <div v-for=\"task in getTodoList\" :key=\"task.id\" class=\"container-task\">\n      <button class=\"checkmark\" @click=\"handleSetTaskIsCompleted(task.id)\"></button>\n      <span>{{ task.title }}</span>\n      <button class=\"remove\" @click=\"handleRemoveTask(task.id)\">Remover</button>\n    </div>\n    <FooterTaskList />\n  </section>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport FooterTaskList from '../FooterTaskList/FooterTaskList.vue';\n\nexport default {\n  name: 'TaskList',\n  components: {\n    FooterTaskList,\n  },\n  computed: {\n    ...mapGetters([\n      'getTodoList',\n    ]),\n  },\n  methods: {\n    ...mapActions(['setRemoveTask']),\n    handleRemoveTask(id) {\n      this.setRemoveTask(id);\n    },\n\n    handleSetTaskIsCompleted(id) {\n      const getStatusIsCompleted = this.getTodoList.map((task) => (task.id === id ? {\n        ...this.getTodoList,\n        isCompleted: !this.getTodoList.isCompleted,\n      } : this.getTodoList));\n\n      this.getTodoList = (getStatusIsCompleted);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\nsection {\n  background: var(--text-white);\n  max-width: 484px;\n  margin: 0 auto;\n  box-shadow: 0px 0px 3px 0px var(--gray);\n  border-radius: 5px;\n  position: relative;\n  margin-top: -30px;\n\n  .container-task {\n    padding: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    padding-bottom: 15px;\n    border-bottom: 1px solid var(--gray);\n\n    span {\n      color: var(--gray-placeholder);\n      // text-decoration: line-through\n    }\n\n    .remove {\n      margin-left: auto;\n    }\n  }\n}\n\n</style>\n"]}]}